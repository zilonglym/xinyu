<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring配置 </description>
	
    <bean id="configBean" class="com.graby.store.base.EnvPropertyPlaceholderConfigurer"> 
        <property name="location"> 
            <value>classpath:application.properties</value> 
        </property> 
    </bean>


	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.graby.store">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- Spring Data Jpa 配置 -->
 	<jpa:repositories base-package="com.graby.store"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.graby.store.entity"/>
		<property name="jpaProperties">
			<props>
				<!-- 自动更新表结构 -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- 命名规则 My_NAME->MyName --> 
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	<!-- Dialect 配置 -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.graby.store.base.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>
	
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
  		
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.graby.store.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml" />
	</bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.graby" />
		<property name="annotationClass" value="com.graby.store.base.MyBatisRepository" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 数据源配置, 使用DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- Connection Pooling Info -->
		<property name="defaultAutoCommit" value="false" />
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>	
	
	<bean id="userCache" class="com.graby.store.cache.CacheMapImpl"/>
	
	<!-- 统一异常页面跳转 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	    <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
	    <property name="defaultErrorView" value="error/error"></property>  
	    <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
	    <property name="exceptionAttribute" value="ex"></property>  
	</bean>
	
	<!-- 快递公司 -->
	<bean id="expressMap" class="org.springframework.beans.factory.config.MapFactoryBean">  
	  <property name="sourceMap">  
	      <map>  
	        <entry key="SF" value="顺丰速运"/>  
	        <entry key="OYT" value="圆通速递"/>  
	        <entry key="STO" value="申通速递"/>  
	        <entry key="ZTO" value="中通速递"/> 
	        <entry key="HTKY" value="汇通速递"/>
	        <entry key="POST" value="中国邮政EMS"/>  
	        <entry key="YUNDA" value="韵达速递"/>  
	        <entry key="TTKDEX" value="天天速递"/> 
	        <entry key="DBL" value="德邦物流"/> 
	        <entry key="LB" value="龙邦速递"/> 
	        <entry key="QFKD" value="全峰快递"/> 
	        <entry key="UC" value="优速快递"/>
	        <entry key="UAPEX" value="全一快递"/>
	      </map>  
	  </property>  
	</bean> 	

</beans>