<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.graby.store.dao.mybatis.PersonDao">
	
	<resultMap id="personEntity" type="com.graby.store.entity.Person">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="age" column="age" />
		<result property="password" column="password" />
		<result property="phone" column="phone" />
		<result property="centroId" column="centro_id" />
		<result property="userName" column="user_name" />
		<result property="idCard" column="id_card" />
		<result property="inputDate" column="input_date" />
		<result property="roles" column="roles" />
		<result property="salt" column="salt" />
	</resultMap>	
	
	<select id="searchPerson"  resultMap="personEntity" parameterType="map">
		select t.*
		from sc_person t
		<where>
			1=1
			<if test="userName!=null">
				and t.user_name=#{userName}
			</if>
			<if test="idCard!=null">
				and t.id_card=#{idCard}
			</if>
			<if test="name!=null and name!=''">
				and t.name=#{name}
			</if>
			<if test="id!=null and id!=''">
				and t.id=#{id}
			</if>
		</where>
	</select>
	
	<select id="getPersons"  resultMap="personEntity" parameterType="map">
		select t.*
		from sc_person t
		<where>
			1=1
			<if test="userName!=null">
				and t.user_name=#{userName}
			</if>
			<if test="idCard!=null">
				and t.id_card=#{idCard}
			</if>
			<if test="name!=null and name!=''">
				and t.name=#{name}
			</if>
		</where>
		limit #{start},#{offset}
	</select>
	
	<select id="findPersonByQ"  parameterType="map" resultType="Person">
		select id,age,centro_id,id_card as "idCard",input_date as "inputDate",name,password,phone,sex,user_name as "userName"
		from sc_person 
		<where>
			1=1
			<if test="userName!=null">
				and user_name=#{userName}
			</if>
			<if test="idCard!=null">
				and id_card=#{idCard}
			</if>
			<if test="id!=null">
				and id=#{id}
			</if>
		</where>
	</select>
	
	<select id="findPersons"  resultMap="personEntity">
		select t.*
		from sc_person t 		
	</select>
	
	<select id="findPersonById"  parameterType="Long" resultType="Person">
		select id,age,centro_id,id_card as "idCard",input_date as "inputDate",name,password,phone,sex,user_name as "userName"
		from sc_person where id=#{id}
	</select>
	
	<update id="updatePerson" parameterType="com.graby.store.entity.Person">
		update sc_person 
		<set>
		<if test="idCard!=null">
			id_card=#{idCard},
		</if>
		<if test="name!=null">
			name=#{name},
		</if>
		<if test="userName!=null">
			user_name=#{userName},
		</if>
		<if test="phone!=null">
			phone=#{phone},
		</if>
		<if test="sex!=null">
			sex=#{sex},
		</if>
		<if test="age!=null">
			age=#{age},
		</if>
		<if test="inputDate!=null">
			input_date=#{inputDate},
		</if>
		<if test="centroId!=null">
			centro_id=#{centroId},
		</if>
		<if test="password!=null">
			password=#{password},
		</if>
		<if test="salt!=null">
			salt=#{salt},
		</if>
		<if test="roles!=null">
			roles=#{roles},
		</if>
		</set>
		where id=#{id}
	</update>
	
	<insert id="savePerson" parameterType="com.graby.store.entity.Person">
		insert  into sc_person(age,centro_id,id_card,input_date,name,password,phone,sex,user_name,salt,roles)
		values(#{age},#{centroId},#{idCard},#{inputDate},#{name},#{password},#{phone},#{sex},#{userName},#{salt},#{roles})
	</insert>
	
	<delete id="delete" parameterType="com.graby.store.entity.Person">
		delete from sc_person where id=#{id}
	</delete>
	
</mapper> 
