<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.graby.store.dao.mybatis.RecordDao">
	
	<resultMap id="recordEntity" type="com.graby.store.entity.Record">
		<result property="id" column="id" />
		<result property="createTime" column="create_time" />
		<result property="userName" column="user_name" />
		<result property="expressCompany" column="express_company" />
		<result property="expressOrderNo" column="express_order_no" />
		<result property="state" column="state" />
		<result property="center" column="center" />
		<result property="weight" column="weight" />
		<result property="price" column="price" />
		<result property="cost" column="cost" />
		<result property="importTime" column="import_time" />
	</resultMap>	
	
	<select id="findRecords" resultMap="recordEntity" parameterType="map">
		select a.*
	    from sc_record a
		where 
		1=1
		<if test="userName!=null and userName!=''">
			and a.user_name = #{userName}
		</if>		
		<if test="expressCompany!=null and expressCompany!=''">
			and a.express_company=#{expressCompany}
		</if>
		<if test="q!=null and q!=''">
			and (a.express_order_no like "%"#{q}"%" or a.state like "%"#{q}"%")
		</if>
		<if test="beigainTime!=null and lastTime!=null and beigainTime!='' and lastTime!=''">
			<![CDATA[
				and a.create_time > date_format(#{beigainTime},'%Y-%m-%d %H:%i')
				and a.create_time <= date_format(#{lastTime},'%Y-%m-%d %H:%i')
			]]>
		</if>
		order by a.create_time ASC
		<if test="start!=null and offset!=null">
			limit #{start},#{offset}
		</if>
	</select>
	
	<select id="getTotalResult" resultType="int" parameterType="map">
		select count(1) from sc_record a
		where 
		1=1
		<if test="userName!=null and userName!=''">
			and a.user_name = #{userName}
		</if>		
		<if test="expressCompany!=null and expressCompany!=''">
			and a.express_company=#{expressCompany}
		</if>
		<if test="q!=null and q!=''">
			and (a.express_order_no like "%"#{q}"%" or a.state like "%"#{q}"%")
		</if>
		<if test="beigainTime!=null and lastTime!=null and beigainTime!='' and lastTime!=''">
			<![CDATA[
				and a.create_time > date_format(#{beigainTime},'%Y-%m-%d %H:%i')
				and a.create_time <= date_format(#{lastTime},'%Y-%m-%d %H:%i')
			]]>
		</if>
	</select>
	
	<select id="getCountByExpressName" resultType="map" parameterType="map">
		select a.express_company as 'expressCompany',count(1) as 'num' from sc_record a
		where 
		1=1
		<if test="userName!=null and userName!=''">
			and a.user_name = #{userName}
		</if>		
		<if test="beigainTime!=null and lastTime!=null and beigainTime!='' and lastTime!=''">
			<![CDATA[
				and a.create_time > date_format(#{beigainTime},'%Y-%m-%d %H:%i')
				and a.create_time <= date_format(#{lastTime},'%Y-%m-%d %H:%i')
			]]>
		</if>
		group by a.express_company
	</select>
	
	<select id="getProfitByExpressName" resultType="map" parameterType="map">
		select a.express_company as 'expressCompany',sum(a.price) as 'price',sum(a.cost) as 'cost' from sc_record a
		where 
		1=1
		<if test="userName!=null and userName!=''">
			and a.user_name = #{userName}
		</if>		
		<if test="beigainTime!=null and lastTime!=null and beigainTime!='' and lastTime!=''">
			<![CDATA[
				and a.create_time > date_format(#{beigainTime},'%Y-%m-%d %H:%i')
				and a.create_time <= date_format(#{lastTime},'%Y-%m-%d %H:%i')
			]]>
		</if>
		group by a.express_company
	</select>
	
	<select id="getTotalProfitByExpressName" resultType="map" parameterType="map">
		select sum(a.price) as 'totalPrice',sum(a.cost) as 'totalCost' from sc_record a
		where 
		1=1
		<if test="userName!=null and userName!=''">
			and a.user_name = #{userName}
		</if>		
		<if test="beigainTime!=null and lastTime!=null and beigainTime!='' and lastTime!=''">
			<![CDATA[
				and a.create_time > date_format(#{beigainTime},'%Y-%m-%d %H:%i')
				and a.create_time <= date_format(#{lastTime},'%Y-%m-%d %H:%i')
			]]>
		</if>
	</select>
	
	<update id="update" parameterType="com.graby.store.entity.Record">
		update sc_record a
		<set>
			<if test="userName!=null and userName!=''">
				a.user_name=#{userName},
			</if>
			<if test="importTime!=null and importTime!=''">
				a.import_time=#{importTime},
			</if>
			<if test="weight!=null and weight!=''">
				a.weight=#{weight},
			</if>	
			<if test="price!=null">
				a.price=#{price},
			</if>
			<if test="expressCompany!=null and expressCompany!=''">
				a.express_company=#{expressCompany},
			</if>	
			<if test="cost!=null">
				a.cost=#{cost},
			</if>	
		</set>
		where a.express_order_no=#{expressOrderNo} 
	</update>
	
	<insert id="insert" parameterType="com.graby.store.entity.Record">
		insert into sc_record(create_time,user_name,express_company,express_order_no,state,center,weight,price,cost,import_time) 
		value(#{createTime},#{userName},#{expressCompany},#{expressOrderNo},#{state},#{center},#{weight},#{price},#{cost},#{importTime})
	</insert>
	
</mapper> 
