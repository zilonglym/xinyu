<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!--namespace必须指向Dao接口 -->
<mapper namespace="com.graby.store.dao.mybatis.StorageDao">
	<resultMap id="StorageEntity" type="com.graby.store.entity.Storage">
		<result property="id" column="id" />
		<result property="operateTime" column="operate_time" />
		<result property="orderNo" column="order_no" />
		<result property="status" column="status" />
		<result property="centro.id" column="centro_id" />
		<result property="operator.id" column="operator_id" />
		<result property="user.id" column="user_id" />
		<result property="description" column="description" />
		<result property="centroItem.id" column="centro_item_id" />
	</resultMap>
	
	<select id="getStorages" resultMap="StorageEntity" parameterType="java.util.Map">
		select * from sc_storage where 1= 1  
			<if test="userId!=null and userId!=0">
				and user_id=#{userId}
			</if>
			<if test="status==null or status==''">
				and status!='ENTRY_DELIVERY'
			</if>
			<if test="status!=null and status!=''">
				and status='ENTRY_DELIVERY'
			</if>
			<if test="start!=null and offset!=null">
   				limit #{start},#{offset}
   			</if> 
	</select>
	
	<select id="getStoragesCount" resultType="long" parameterType="java.util.Map">
		 select count(*) from sc_storage where 1= 1  
			<if test="userId!=null and userId!=0">
				and user_id=#{userId}
			</if>
			<if test="status==null or status==''">
				and status!='ENTRY_DELIVERY'
			</if>
			<if test="status!=null and status!=''">
				and status='ENTRY_DELIVERY'
			</if>
	</select>
	
	
	<select id="getStorageItemList" resultMap="StorageItemEntity" parameterType="map">
		select * from sc_storage_item
		<where>
			<if test="id!=null and id!=0">
				and stora_id=#{id}
			</if>
			
		</where>
	</select>
	
	<select id="getStorageById" parameterType="Long" resultMap="StorageEntity">
		select * from sc_storage s where s.id=#{0}
	</select>
	
	
	
	<insert id="save" parameterType="com.graby.store.entity.Storage" useGeneratedKeys="true" keyProperty="id">
		insert into sc_storage(
		centro_id,operate_time,user_id,order_no,status,description,centro_item_id)
		values (
		#{centro.id},#{operateTime},#{operator.id},#{orderNo},#{status},#{description},#{centroItem.id})
	</insert>
	
	<insert id="saveItems"  parameterType="com.graby.store.entity.StorageItem"  useGeneratedKeys="true" keyProperty="id">
		insert into sc_storage_item (
		area,centro_id,create_time,description,item_id,quantity,stora_id)
		values (
		#{area},#{centro.id},#{createTime},#{description},#{item.id},#{quantity},#{storage.id})
	</insert>
	
	
	<resultMap id="StorageItemEntity" type="com.graby.store.entity.StorageItem">
		<result property="id" column="id" />
		<result property="storage.id" column="stora_id" />
		<result property="item.id" column="item_id" />
		<result property="quantity" column="quantity" />
		<result property="description" column="description" />
		<result property="createTime" column="createTime" />
		<result property="centro.id" column="centro_id" />
		<result property="area" column="area" />
	</resultMap>
	
	<select id="storageDetailbyId" parameterType="map" resultMap="StorageItemEntity">
	select a.*,b.*,c.*,d.*,e.*
	       from sc_storage_item a,sc_storage b,sc_centro c,sc_item d,sc_user e
           where  a.stora_id=b.id and a.centro_id=c.id and a.item_id=d.id and d.userid=e.id and b.id=#{id} 
	</select>
</mapper> 
